# Generated by Django 5.2.4 on 2025-07-31 20:32

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('hr', '0008_leavebalance'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='trainingsession',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='trainingsession',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_training_sessions', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='trainingsession',
            name='description',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='trainingsession',
            name='end_time',
            field=models.TimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='trainingsession',
            name='instructor',
            field=models.CharField(blank=True, max_length=200),
        ),
        migrations.AddField(
            model_name='trainingsession',
            name='is_mandatory',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='trainingsession',
            name='location',
            field=models.CharField(blank=True, max_length=200),
        ),
        migrations.AddField(
            model_name='trainingsession',
            name='start_time',
            field=models.TimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='trainingsession',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.CreateModel(
            name='TrainingMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('material_type', models.CharField(choices=[('policy', 'Policy Document'), ('manual', 'Training Manual'), ('guide', 'User Guide'), ('presentation', 'Presentation'), ('form', 'Form/Template'), ('other', 'Other Document')], default='other', max_length=20)),
                ('file', models.FileField(help_text='Supported formats: PDF, DOC, DOCX, JPG, JPEG, PNG, PPT, PPTX', upload_to='training_materials/')),
                ('file_size', models.PositiveIntegerField(blank=True, help_text='File size in bytes', null=True)),
                ('visibility', models.CharField(choices=[('all', 'All Employees'), ('department', 'Department Only'), ('role', 'Specific Role'), ('custom', 'Custom Selection')], default='all', max_length=20)),
                ('is_mandatory', models.BooleanField(default=False, help_text='Whether this material is mandatory for employees')),
                ('expiry_date', models.DateField(blank=True, help_text='Date when this material expires', null=True)),
                ('version', models.CharField(default='1.0', max_length=50)),
                ('tags', models.CharField(blank=True, help_text='Comma-separated tags for categorization', max_length=500)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('target_departments', models.ManyToManyField(blank=True, help_text='Departments that can access this material', to='hr.department')),
                ('target_employees', models.ManyToManyField(blank=True, help_text='Specific employees that can access this material', to=settings.AUTH_USER_MODEL)),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uploaded_training_materials', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TrainingVideo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('video_type', models.CharField(choices=[('training', 'Training Video'), ('orientation', 'Orientation Video'), ('safety', 'Safety Training'), ('compliance', 'Compliance Training'), ('skills', 'Skills Development'), ('policy', 'Policy Explanation'), ('other', 'Other')], default='training', max_length=20)),
                ('video_file', models.FileField(help_text='Supported formats: MP4, AVI, MOV, WMV', upload_to='training_videos/')),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='training_thumbnails/')),
                ('duration', models.DurationField(blank=True, help_text='Video duration', null=True)),
                ('file_size', models.PositiveIntegerField(blank=True, help_text='File size in bytes', null=True)),
                ('visibility', models.CharField(choices=[('all', 'All Employees'), ('department', 'Department Only'), ('role', 'Specific Role'), ('custom', 'Custom Selection')], default='all', max_length=20)),
                ('is_mandatory', models.BooleanField(default=False, help_text='Whether this video is mandatory for employees')),
                ('tags', models.CharField(blank=True, help_text='Comma-separated tags for categorization', max_length=500)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('target_departments', models.ManyToManyField(blank=True, help_text='Departments that can access this video', to='hr.department')),
                ('target_employees', models.ManyToManyField(blank=True, help_text='Specific employees that can access this video', to=settings.AUTH_USER_MODEL)),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uploaded_training_videos', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TrainingProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('not_started', 'Not Started'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('overdue', 'Overdue')], default='not_started', max_length=20)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('progress_percentage', models.PositiveIntegerField(default=0, help_text='Progress percentage (0-100)')),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='training_progress', to=settings.AUTH_USER_MODEL)),
                ('material', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='progress_records', to='hr.trainingmaterial')),
                ('video', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='progress_records', to='hr.trainingvideo')),
            ],
            options={
                'ordering': ['-updated_at'],
                'unique_together': {('employee', 'material'), ('employee', 'video')},
            },
        ),
    ]
